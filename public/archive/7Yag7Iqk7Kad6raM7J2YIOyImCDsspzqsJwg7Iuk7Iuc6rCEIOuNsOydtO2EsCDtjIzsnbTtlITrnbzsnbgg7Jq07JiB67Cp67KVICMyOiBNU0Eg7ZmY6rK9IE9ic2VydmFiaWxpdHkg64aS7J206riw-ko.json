{"title":"토스증권의 수 천개 실시간 데이터 파이프라인 운영방법 #2: MSA 환경 Observability 높이기","content":"<body>\n    <p>본문은 토스증권 Realtime Data Team의 강병수 님이 Kafka Producer/Consumer Client와 Kafka Broker 간의 연결 관계를 실시간으로 파악하는 방법을 상세히 소개하는 글입니다.</p>\n    <p>기존에는 수천 개의 실시간 데이터 파이프라인 리니지 시각화에 대한 내용을 다루었으며, 이번 글에서는 특히 Kafka Producer/Consumer Client와 Kafka Broker의 연결 관계라는 특별한 주제에 집중합니다.</p>\n    <h3>요구 조건</h3>\n    <ul>\n        <li>원천 서비스 소스코드 수정 없이 연결 관계 파악</li>\n        <li>연결 현황 실시간 반영</li>\n        <li>100% 커버리지로 모든 연결 정확하게 파악</li>\n    </ul>\n    <h3>연결 현황 파악 방법</h3>\n    <p>소스코드 수정 없이 요구 조건을 충족하기 위해 Kafka Broker의 request log를 활용하는 방안을 모색했습니다.</p>\n    <h4>Kafka Broker request log의 잠재력</h4>\n    <ul>\n        <li>Kafka Broker는 기본적으로 request log를 남기지 않으나, log4j 설정을 통해 TRACE 레벨로 활성화 가능합니다.</li>\n        <li>그러나 모든 request log를 100% 활성화하면 Broker 장애로 이어질 수 있어, 0.1% 샘플링 라이브러리를 개발하여 적용했습니다.</li>\n        <li>샘플링 로그의 한계를 극복하기 위해, 트래픽과 무관하게 주기적으로 호출되는 METADATA API만 100% 로깅하도록 변경했습니다.</li>\n    </ul>\n    <h4>METADATA API 활용</h4>\n    <ul>\n        <li>모든 Kafka Client는 Topic-Partition 리더 정보 획득 등을 위해 주기적으로 METADATA API를 호출합니다.</li>\n        <li>이는 모든 언어의 Producer, Consumer에 상관없이 적용되어 100% 커버리지를 확보할 수 있습니다.</li>\n        <li>약 10분간의 METADATA API request log를 조회하면 실시간 연결 현황을 파악할 수 있습니다.</li>\n    </ul>\n    <h4>METADATA API의 한계 보완</h4>\n    <ul>\n        <li>METADATA API 로그만으로는 Producer/Consumer 구분 및 Consumer Group 정보 파악이 어렵습니다.</li>\n        <li>이 부족한 정보를 보완하기 위해 Kafka Consumer Lag metric과 join하여 Producer/Consumer 구분 및 Consumer Group 정보를 확보했습니다.</li>\n    </ul>\n    <h3>가시성 확보를 위한 추가 작업</h3>\n    <ul>\n        <li>IP:Port 정보만으로는 서비스 명을 알 수 없어, Kubernetes conntrack 정보를 활용하여 IP, Port와 Pod Name을 매핑했습니다.</li>\n        <li>ClickHouse를 통합 모니터링 DB로 사용하여 METADATA request log, Lag metric, conntrack 정보를 join하여 'service_graph' 테이블을 생성했습니다.</li>\n        <li>ClickHouse Materialized View를 활용하여 실시간으로 'service_graph' 테이블을 업데이트하고, Grafana를 통해 시각화했습니다.</li>\n    </ul>\n    <h3>최종 결과 및 의미</h3>\n    <ul>\n        <li>'service_graph' 테이블은 Kafka Producer/Consumer의 실시간 연결 현황을 정확하게 제공합니다.</li>\n        <li>이 데이터를 Lineage 메타데이터에 반영하여 Kafka Producer/Consumer의 연결 리니지를 시각화할 수 있습니다.</li>\n        <li>ClickHouse 테이블은 다른 팀에서도 다양한 통계 및 데이터 추출에 활용 가능하며, 토스증권 시스템의 가시성과 안정성을 높이는 데 기여했습니다.</li>\n    </ul>\n    <p>이 글은 회사의 상황에 따라 보편적으로 적용하기는 어려울 수 있으나, 안정적인 증권 시스템 구축을 위한 고민과 과정에 의미를 둡니다.</p>\n</body>","createdAt":"2025-09-19T03:07:00.000+00:00","link":"https://toss.tech/article/MSA-observability","language":"ko"}