{"title":"3D Layered Text: Interactivity and Dynamicism","content":"<body>\n  <h2>3D 레이어드 텍스트: 상호작용 및 동적 효과</h2>\n  <p>이전 챕터에서는 정적인 3D 텍스트 효과를 만들고 동적인 움직임을 추가했습니다. 이번 챕터에서는 JavaScript를 사용하여 텍스트에 상호작용과 동적인 요소를 더합니다.</p>\n  <h3>핵심 내용</h3>\n  <ul>\n    <li>JavaScript를 사용하여 텍스트 레이어를 동적으로 생성하여 코드의 유연성과 가독성을 높입니다.</li>\n    <li><code>data-layers</code> 속성을 사용하여 각 요소별로 레이어 수를 지정하고, <code>--layers-count</code> CSS 변수로 설정합니다.</li>\n    <li><code>pointer-events: none;</code>을 사용하여 불필요한 레이어가 마우스 상호작용을 방해하지 않도록 합니다.</li>\n    <li>CSS <code>:hover</code> 상태를 활용하여 링크 등에 호버 시 3D 효과를 적용하고, 기본 상태에서는 투명하게 처리합니다.</li>\n    <li>JavaScript로 마우스 위치(<code>--mx</code>, <code>--my</code>)와 요소 위치(<code>--left</code>, <code>--top</code>)를 CSS 변수로 설정합니다.</li>\n    <li><code>getBoundingClientRect()</code>를 사용하여 요소의 위치를 얻고, <code>window.scrollY</code> 및 <code>window.scrollX</code>를 더하여 전체 페이지에서의 위치를 계산합니다.</li>\n    <li><code>radial-gradient</code>와 CSS 변수를 조합하여 마우스 위치에 따라 반응하는 동적인 배경 효과를 만듭니다.</li>\n    <li>마우스 위치를 정규화하여(0과 1 사이 값) 화면 크기에 관계없이 일관된 반응형 효과를 구현합니다.</li>\n    <li>CSS 삼각 함수(`cos()`)를 사용하여 마우스에 따라 텍스트가 볼록하게(bulging) 변형되는 효과를 구현합니다.</li>\n    <li>기본 텍스트(`span`)의 투명도와 그림자 효과를 조절하여 호버 시 3D 효과를 더욱 강조합니다.</li>\n  </ul>\n  <h3>결론</h3>\n  <p>JavaScript와 CSS 변수를 활용하여 3D 레이어드 텍스트에 동적인 구조, 상호작용, 그리고 시각적인 효과를 더하는 방법을 배웠습니다. 이를 통해 사용자 입력에 반응하고 독특한 시각 경험을 제공하는 타이포그래피를 만들 수 있습니다.</p>\n</body>\n```","createdAt":"2025-08-22T13:14:31.000+00:00","link":"https://css-tricks.com/3d-layered-text-interactivity-and-dynamism/","language":"ko"}