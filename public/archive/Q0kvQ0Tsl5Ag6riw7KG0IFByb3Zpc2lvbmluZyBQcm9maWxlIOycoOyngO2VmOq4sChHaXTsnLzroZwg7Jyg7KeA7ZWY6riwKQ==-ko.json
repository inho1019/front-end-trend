{"content":"<body>\n<p>기존 다나와 서비스는 개발자별로 develop 및 distribution 프로비저닝 프로파일을 관리했으나, ConnectWave 합류 후 서비스(앱) 당 distribution 프로비저닝 프로파일 1개만 유지해야 하는 제약이 생겼습니다. CI/CD 환경에서 이를 효율적으로 관리하기 위한 방안을 모색했으며, 다음과 같은 방법을 시도했습니다.</p>\n<h2>1. 기기에서 프로비저닝 프로파일 관리</h2>\n<p>CI 기기(맥미니)에 프로비저닝 프로파일을 절대 경로로 설정하는 방식은 CI 기기 변경 시 재설정의 번거로움이 있었습니다.</p>\n<h2>2. Jenkins에서 프로비저닝 프로파일 관리</h2>\n<p>Jenkins에 파일을 등록하고 인증서로 관리하는 방안을 고려했으나, 바이너리 파일 업로드 제약과 네트워크 망 분리 문제로 Jenkins에 대한 원격 접근이 어려워 실패했습니다. 이는 문제 발생 시 제어 범위를 벗어나는 단점이 있었습니다.</p>\n<h2>3. Fastlane Match를 활용한 Git 연동 관리</h2>\n<p>Fastlane의 <code>match</code> 명령어를 사용하여 프로비저닝 프로파일 및 인증서 생성을 자동화하고, 이를 Git 저장소에 암호화하여 관리하는 방식을 채택했습니다. 이 방식은 다음 조건을 충족했습니다:</p>\n<ul>\n<li>컨트롤 가능성 확보</li>\n<li>기존 프로비저닝 프로파일 활용</li>\n</ul>\n<h3>3.1. 프로비저닝 프로파일 Git 저장소에 업로드</h3>\n<p><code>fastlane match import --type {타입} --username {Email} --team_id {팀 아이디}</code> 명령어를 사용하여 기존 프로비저닝 프로파일(.cer, .p12, .mobileprovision)을 Git 저장소에 업로드했습니다. 파일은 암호화되어 저장되며, Git URL과 암호는 추후 다운로드 시 사용됩니다.</p>\n<h3>3.2. Git 저장소에서 프로비저닝 프로파일 다운로드 및 적용</h3>\n<p>Fastfile에 <code>match</code> 명령어를 설정하여 Git 저장소에서 프로비저닝 프로파일을 다운로드받고, <code>update_project_provisioning</code> 및 <code>update_code_signing_settings</code>를 사용하여 Xcode 프로젝트에 프로비저닝 프로파일, 서명 인증서, 팀 ID를 자동으로 적용했습니다.</p>\n<ul>\n<li><code>match</code>: 지정된 Git URL, 브랜치, 저장 경로에서 프로비저닝 프로파일을 다운로드합니다.</li>\n<li><code>update_project_provisioning</code>: Xcode 프로젝트에 프로비저닝 프로파일 경로와 서명 인증서(Certificate Name + TEAM_ID)를 주입합니다.</li>\n<li><code>update_code_signing_settings</code>: Xcode 프로젝트의 자동 서명 설정을 비활성화하고, 지정된 팀 ID로 서명 설정을 업데이트합니다. (<code>use_automatic_signing: false</code>로 설정하여 목적에 부합하도록 함)</li>\n</ul>\n<p>이 과정을 통해 Fastlane의 다양한 명령어를 활용하여 프로비저닝 프로파일을 효율적으로 관리하고 CI/CD 파이프라인에 적용할 수 있게 되었습니다.</p>\n</body>\n</html>","createdAt":"2025-08-12T23:59:21.144Z","language":"ko"}