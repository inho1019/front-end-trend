{"content":"<p>디지털 인터페이스 구축은 구성 요소를 만들고 이를 조합하여 인터페이스를 구성하는 것이 가장 좋은 방법이라는 것이 정설입니다. 웹사이트의 경우 헤더, 푸터, 그리드, 카드, 버튼 등이 이에 해당합니다. 자바스크립트 프레임워크의 발전은 이러한 아이디어를 더욱 확고히 했습니다. React, Vue, Svelte와 같은 프레임워크는 구성 요소를 구축하고 조합하여 작동합니다.</p>\n<p>하지만 별도의 빌드 프로세스나 프레임워크 없이 구성 요소 기반 프로젝트를 진행할 수 있을까요? 필자는 몇 가지 방법을 제안합니다. 구성 요소들은 각각의 폴더 안에 템플릿, 로직, CSS 파일을 분리하여 저장하는 방식입니다. 예를 들어, 버튼, 카드, 헤더 구성 요소는 모두 <code>components</code> 폴더 안에 각자의 이름으로 된 폴더를 가지고 있으며, 그 안에 <code>button.js</code>, <code>button.css</code>와 같이 파일을 구성합니다.</p>\n<p>이는 구성 요소 아키텍처를 만드는 데 합리적인 논리적 그룹화 및 격리 방식입니다. 더 복잡한 구성 요소는 <code>.graphql</code> 파일, 이미지, 테스트 파일 등을 포함할 수 있으며, 이러한 파일들을 함께 관리하는 것이 중요합니다.</p>\n<p>본문에서 제시된 예시는 웹 구성 요소를 활용하여 자바스크립트 프레임워크 없이 구성 요소 기반 프로젝트를 구축하는 방법을 보여줍니다. 웹 구성 요소는 자바스크립트 인스턴스화가 필요하지만, 별도의 프레임워크 없이 사용할 수 있습니다. 본문에서는 데모를 위해 Lit이라는 경량 헬퍼 라이브러리를 사용하지만, 이는 필수는 아닙니다. <code>import \"./card.css\";</code>와 같이 자바스크립트 파일에서 CSS 파일을 가져오는 방식은 webpack이나 Vite와 같은 도구를 통해 CSS가 페이지에 주입되도록 할 수 있습니다.</p>","createdAt":"2025-08-12T10:38:17.557Z","language":"ko"}