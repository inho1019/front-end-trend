{"content":"<body>\n  <p>디지털 인터페이스 구축은 컴포넌트를 만들고 이를 조립하여 완성하는 것이 일반적입니다. 웹사이트에서는 헤더, 푸터, 그리드, 카드, 버튼 등이 이러한 컴포넌트가 될 수 있습니다. 자바스크립트 프레임워크의 발전으로 컴포넌트 기반 개발이 더욱 확고해졌습니다.</p>\n  <p>이러한 컴포넌트 구조를 프레임워크나 빌드 과정 없이 구현할 수 있습니다. 컴포넌트는 각자 독립적인 폴더 안에 템플릿, 로직, CSS 파일을 따로 가지는 것이 좋습니다.</p>\n  <p>자바스크립트에서 컴포넌트를 가져오는 것은 HTML include 개념이 아직 없기 때문이며, 웹 컴포넌트를 사용하는 것이 좋은 방법입니다. 웹 컴포넌트는 자바스크립트 인스턴스화가 필요하지만, 프레임워크 없이 사용할 수 있습니다. (데모에서는 Lit 라이브러리를 사용합니다.)</p>\n  <p>컴포넌트 JS와 CSS 파일을 통합하는 방법은 번들러를 통해 해결됩니다. Webpack은 JS 파일에 CSS 파일을 import하면 이를 페이지에 로드하도록 처리하며, Vite 또한 유사한 방식으로 CSS 내용을 페이지에 주입합니다.</p>\n</body>","createdAt":"2025-08-12T17:32:03.673Z","language":"ko"}