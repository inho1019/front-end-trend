{"content":"AI는 텍스트 작성, 음악 제작, 코드 생성, 그림 그리기, 연구 수행, 대화 등 거의 모든 분야에서 활용되고 있으며, 심지어 사람보다 사람을 더 잘 이해하는 것처럼 보이기도 합니다.\n이러한 AI의 발전 속도는 매우 빠르며, 새로운 도구들이 계속해서 등장하고 있습니다. 이는 단순한 과장이 아니라 구조적인 변화를 의미합니다.\n세계경제포럼의 미래의 일자리 보고서 2025에 따르면, 향후 5년간 가장 빠르게 성장하고 수요가 많은 기술 중 하나는 AI 및 빅데이터 활용 능력이며, 이는 제품 디자인을 포함한 거의 모든 직무에 해당됩니다.\n기업은 팀에게 효율성을 가장 중요하게 생각하며, AI는 사람들의 효율성을 크게 높일 수 있습니다. AI의 도움 없이 작업할 경우 3배 더 많은 시간이 소요될 수 있습니다. 우리는 AI와 협업하는 방법을 배우고 있지만, 여전히 많은 사람들이 높아진 기준에 맞추기 위해 노력하고 있습니다.\n특히 디자이너의 경우 공감, 창의성, 비판적 사고, 다양한 분야와의 협업이 중요한데, AI는 이러한 인간적인 조합을 보완할 수 있습니다. AI의 한계에 대한 논쟁이 있지만, 현재의 도구들도 연구, 아이디어 구상, 테스트 등에서 예상보다 더 나은 도움을 줄 수 있습니다.\nAI가 잘못된 정보를 제공하거나 맥락을 놓치는 경우도 있지만, AI는 결함이 있으면서도 동시에 놀랍도록 유용할 수 있습니다. 핵심은 AI의 강점을 활용하면서 약점을 관리하는 방법을 아는 것입니다. 중요한 것은 AI가 좋고 나쁨이 아니라, 디자이너로서 어떻게 날카롭고 가치 있으며 정보에 밝게 유지될 수 있는지입니다.\n\n프롬프트가 중요한 이유\n프롬프트는 우리가 AI에 질문하는 방식의 작은 변화가 완전히 다른 결과를 초래할 수 있기 때문에 많은 사람들이 인식하는 것보다 더 중요합니다. 이를 실질적으로 이해하기 위해 간단한 예를 살펴보겠습니다.\n제품의 온보딩 경험을 개선하고 싶다고 가정해 보겠습니다. 왼쪽은 AI에 보내는 프롬프트이고, 오른쪽은 AI의 응답입니다.\n\nInput: SaaS 제품의 온보딩을 개선하는 방법?\nOutput: 👉 일반적인 제안: 체크리스트, 빈 상태, 환영 모달…\n\nInput: Product A의 워크스페이스 설정 흐름에서 온보딩을 개선하는 방법?\nOutput: 👉 워크스페이스 설정에 초점을 맞춘 제안…\n\nInput: Product A의 워크스페이스 설정 단계를 개선하여 사용자 혼란을 해결하는 방법?\nOutput: 👉 약 10가지 일반적인 문제점과 각 문제에 대한 맞춤형 UX 수정…\n\nInput: Product A의 온보딩을 워크스페이스 설정 화면을 재설계하여 이탈률을 줄이는 방법, 상세한 이유와 함께?\nOutput: 👉 특정 UI 변경, 근거, 예상되는 영향에 대한 약 10개의 단락…\n\n이 비교는 프롬프트의 아주 작은 디테일이 AI가 제공하는 결과물을 얼마나 많이 바꿀 수 있는지 보여줍니다.\nAI 모델과 대화하는 것은 사람과 대화하는 것과 다르지 않습니다. 생각을 명확하게 설명하면 더 나은 이해와 전반적인 커뮤니케이션을 얻을 수 있습니다.\n고급 프롬프팅은 일회성으로 버려지는 프롬프트에서 벗어나는 것입니다. 이는 AI를 더 유용한 결과로 안내하기 위해 다양한 기법을 사용하여 입력을 개선하는 반복적이고 구조화된 프로세스입니다. AI에 작업뿐만 아니라 단계별 접근 방식을 제공하여 실제로 작업을 수행할 수 있도록 모든 단어를 의도적으로 사용하는 데 중점을 둡니다.\n기본적인 프롬프팅이 모델에 질문을 던지고 빠른 답변을 기대하는 반면, 고급 프롬프팅은 옵션을 탐색하고, 추론의 분기를 평가하고, 명확하고 실행 가능한 결과로 수렴하는 데 도움이 됩니다.\n하지만 그렇다고 해서 간단한 프롬프트가 쓸모없다는 의미는 아닙니다. 오히려 짧고 집중된 프롬프트는 작업이 좁고 사실적이거나 시간에 민감할 때 잘 작동합니다. 아이디어 생성, 빠른 설명 또는 심층적인 추론이 필요하지 않은 모든 것에 훌륭합니다. 프롬프팅을 이진법이 아닌 척도로 생각하십시오. 작업이 간단할수록 경량 프롬프트가 작업을 더 빨리 완료할 수 있습니다. 작업이 복잡할수록 더 많은 구조가 필요합니다.\n이 기사에서는 고급 프롬프팅이 다양한 제품 및 디자인 사용 사례를 어떻게 지원하고, 워크플로우를 가속화하며, 연구, 브레인스토밍, 테스트 등에서 결과를 개선하는지 자세히 살펴보겠습니다.\n\n실용적인 사례\n다음 섹션에서는 실제 제품 디자인 작업에서 가장 유용하다고 판단되는 6가지 실용적인 프롬프트 기법을 살펴봅니다. 이러한 기법들은 추상적인 이론이 아니라 실제 경험에 기반하고 연구, 아이디어 구상, 평가 작업 전반에 걸쳐 테스트되었습니다. 사용 사례에 따라 혼합, 일치 및 조정할 수 있는 모듈식 도구로 생각하십시오. 각 기법에 대해 그 이면의 사고방식을 설명하고 샘플 프롬프트를 안내합니다.\n중요 참고 사항: 볼 프롬프트는 복사해서 붙여넣는 레시피가 아닙니다. 일부는 작은 조정으로 재사용할 수 있는 구조화된 템플릿이고, 다른 일부는 더 구체적이며 사고를 자극하기 위한 것입니다. 스크립트가 아닌 스캐폴드로 사용하십시오.\n\n1. JTBD를 통한 작업 분해\n기법: 역할, 맥락, 지침 템플릿 + 검사점 (자가 성찰 포함)\n문제를 해결하기 전에 자주 간과하는 중요한 단계는 문제를 명확하고 실행 가능한 부분으로 분해하는 것입니다.\n실행으로 바로 뛰어드는 것은 빨라 보이지만 위험합니다. 잘못된 것을 해결하거나 잘못된 방식으로 해결할 수 있습니다. GPT는 아이디어를 생성할 뿐만 아니라 문제 자체의 구조에 대해 더 명확하게 생각하는 데 도움을 줄 수 있습니다.\n작업을 분해하는 방법에는 여러 가지가 있습니다. 제품 작업에서 가장 유용한 방법 중 하나는 Jobs To Be Done (JTBD) 프레임워크입니다. 고급 프롬프팅을 사용하여 JTBD 분해를 모든 작업에 적용하는 방법을 살펴보겠습니다.\n훌륭한 디자인은 사용자를 이해하는 것에서 시작됩니다. 훌륭한 프롬프팅은? 거의 동일합니다. 대부분의 견고한 프롬프트에는 역할, 맥락, 지침의 세 가지 주요 부분이 포함되는 이유입니다. 필요한 경우 예상 형식 및 제약 조건을 추가할 수도 있습니다.\n이 예에서는 작업을 더 작은 작업으로 분해하고 프롬프트에 자체 검사점을 추가하여 AI가 일시 중지, 성찰 및 자체 확인을 할 수 있도록 합니다.\n역할 Jobs To Be Done (JTBD) 방법론 및 사용자 중심 디자인에 대한 깊은 전문성을 갖춘 선임 제품 전략가 및 UX 디자이너로서 행동하십시오. Intercom, Basecamp 또는 IDEO와 같은 회사에서 사용하는 접근 방식과 유사하게 사용자 목표, 진행 상황, 충족되지 않은 요구 사항에 초점을 맞춰 생각합니다.\n맥락 귀하는 제품 팀이 광범위한 사용자 또는 비즈니스 문제를 구조화된 Jobs To Be Done 맵으로 분해하는 데 도움을 주고 있습니다. 이 분해는 검색, 우선순위 지정 및 솔루션 디자인을 안내합니다.\n작업 및 지침 [👉 사용자 작업 또는 문제 설명 👈🏼]JTBD 사고를 사용하여 다음을 파악하십시오.사용자가 완료하려는 주요 기능 작업;관련된 감정적 또는 사회적 작업;그 과정에서 사용자가 완료해야 하는 하위 작업 또는 단계;행동에 영향을 미치는 진행의 힘과 장애물.\n검사점 완료하기 전에 자신을 확인하십시오.작업이 명확하게 목표 지향적이고 솔루션 지향적이지 않습니까?하위 작업이 주요 작업을 향한 구체적인 단계입니까?감정적/사회적 작업이 캡처되었습니까?사용자 고충 또는 충족되지 않은 요구 사항이 나열되어 있습니까?누락되거나 불분명한 것이 있다면 수정하고 추가되거나 변경된 내용을 설명하십시오.\n간단한 한 문장 프롬프트로 사용자 요구 사항 또는 기능 아이디어의 높은 수준 목록을 얻을 수 있습니다. 고급 접근 방식은 특정 사용자 문제에 대한 구조화된 JTBD 분해를 생성할 수 있으며, 여기에는 다음이 포함될 수 있습니다.\n주요 기능 작업: 사용자가 달성하고자 하는 주요 결과를 설명하는 명확하고 목표 지향적인 문구.\n감정적 및 사회적 작업: 진행 중에 사용자가 느끼거나 인식되기를 원하는 방식과 관련된 지원 작업.\n하위 작업: 주요 작업을 완료하기 위해 사용자가 완료해야 하는 단계별 작업 또는 마일스톤.\n진행의 힘: 사용자 행동에 영향을 미치는 동기(밀기/당기기) 및 장애물(습관/불안)의 분석.\n하지만 이러한 프롬프트는 실제 맥락에서 사용할 때 가장 강력합니다. 지금 제품으로 사용해 보세요. 빠른 테스트만으로도 예상치 못한 통찰력을 얻을 수 있습니다.\n\n2. 경쟁사 UX 감사\n기법: 첨부 파일 + 이해 전 추론 + 생각의 트리 (ToT)\n때로는 새로운 것을 디자인할 필요가 없습니다. 기존 것을 이해하면 됩니다.\n경쟁사 분석을 하든, 경쟁사로부터 배우든, 기능을 벤치마킹하든 첫 번째 과제는 다른 사람의 디자인 선택을 이해하는 것입니다. 해당 기능은 실제로 무엇을 위한 것입니까? 누구를 돕고 있습니까? 왜 이런 방식으로 만들어졌습니까?\n비판에 서두르기보다는 GPT를 사용하여 제품 뒤의 사고 과정을 역공학할 수 있습니다. 이 경우 다음으로 시작하십시오.\n분석하려는 기능에 대한 경쟁사의 문서를 가져옵니다.PDF로 저장한 다음 ChatGPT(또는 다른 모델)로 이동합니다.감사로 바로 이동하기 전에 먼저 문서의 의미를 파악하도록 요청하십시오. 이 기법을 이해 전 추론(RBU)이라고 합니다. 즉, 비판을 요청하기 전에 해석을 요청하는 것입니다. 이렇게 하면 AI가 더 정확한 정신 모델을 구축하는 데 도움이 되며 성급한 결론을 피할 수 있습니다.\n역할 귀하는 최소한의 초기 맥락을 기반으로 디지털 제품 기능을 해석하고, 평가 비판을 수행하기 전에 디자인 결정의 목적, 사용자 의도 및 정신 모델을 추론하는 데 전문성을 가진 선임 UX 전략가이자 인지 디자인 분석가입니다.\n맥락 내부 문서와 기능 스크린샷을 받았습니다. 아직 평가하는 것이 아니라 무엇을 하고 있는지, 누구를 위해 하고 있는지, 왜 하고 있는지를 이해하는 것이 목표입니다.\n작업 및 지침 자료를 검토하고 다음 질문에 답하십시오.이 기능은 무엇을 위한 것입니까?의도된 사용자는 누구입니까?어떤 작업 또는 시나리오를 지원합니까?사용자에 대해 어떤 가정을 합니까?그 구조는 우선순위 또는 제약 조건에 대해 무엇을 시사합니까?\n첫 번째 응답을 받으면 잠시 시간을내어 GPT의 결론을 명확히 하거나 수정하거나 뉘앙스를 추가하십시오. 이렇게 하면 모델의 정신 프레임이 자신의 프레임과 일치하는 데 도움이 됩니다.\n감사 부분에는 생각의 트리(ToT)라는 것을 사용할 것입니다.\n생각의 트리(ToT)는 AI에 \"가지로 생각하라\"고 요청하는 프롬프팅 전략입니다. 단일 답변으로 바로 이동하는 대신 모델은 여러 추론 경로를 탐색하고, 결과를 비교하고, 결론을 내리기 전에 논리를 수정합니다. 이는 결정 트리를 통해 다양한 경로를 추적하는 것과 같습니다. 따라서 더 복잡한 UX 작업을 처리하는 데 적합합니다.\n이제 기능에 대한 이해를 바탕으로 UX 감사를 수행하고 있습니다. 생각의 트리 접근 방식을 사용하여 잠재적인 문제점, 대체 디자인 경로 및 절충점을 식별합니다. 즉, 가지로 생각하고 결론을 내리기 전에 다른 추론 경로를 비교합니다.\n생각의 트리 접근 방식을 사용하여 사용자 관점에서 기능에 대한 Jobs-To-Be-Done 문구 집합으로 기능을 이해한 내용을 변환합니다.\n생각의 트리 접근 방식을 사용하여 이 기능이 사용자의 행동, 워크플로우 또는 맥락에 대해 하는 암묵적인 가정을 나열합니다.\n생각의 트리 접근 방식을 사용하여 다른 상호 작용 또는 흐름 메커니즘을 사용하여 동일한 작업을 해결하는 기능의 대체 버전을 제안합니다.\n\n3. 지적 반대자와의 아이디어 구상\n기법: 역할 조건화 + 메모 업데이트\n창의적이거나 전략적인 문제를 다룰 때 흔한 함정이 있습니다. AI는 종종 당신과 동의하거나 당신의 사고방식을 만족시키려고 합니다. 그것은 당신의 아이디어를 신성한 것으로 취급하고 그것이 위대하다고 말합니다. 심지어 그렇지 않을 때도 말입니다.\n그렇다면 이것을 어떻게 피할 수 있을까요? GPT가 당신의 가정을 반박하고 비판적 사고 파트너처럼 행동하도록 어떻게 만들 수 있을까요? 간단합니다. 그것에 말하고 기억하도록 요청하십시오.\n지침 이제부터 명시적으로 달리 말하지 않는 한 이 모드를 따르십시오.내 결론을 액면 그대로 받아들이지 마십시오. 귀하의 역할은 맹목적으로 동의하거나 돕는 것이 아니라 날카롭고 존중하는 지적 반대자 역할을 하는 것입니다.내 아이디어를 제시할 때마다 다음을 수행하십시오.내 가정을 조사하십시오: 나는 무엇을 당연하게 여기고 있습니까?반론을 제시하십시오: 내가 틀렸거나, 오해했거나, 과도하게 확신할 수 있는 부분은 무엇입니까?내 논리를 테스트하십시오: 추론이 타당합니까, 아니면 간격, 오류 또는 편향이 있습니까?대안을 제시하십시오: 불일치를 위한 것이 아니라 관점을 확장하기 위함입니다.합의보다 진실과 명확성을 우선시하십시오: 불편하더라도.건설적이고 엄격하며 진실을 추구하는 어조를 유지하십시오. 이유 없이 논쟁하지 마십시오. 생각을 날카롭게 하고, 사각 지대를 노출하고, 내가 더 명확하고 강력한 결론에 도달하도록 돕기 위해 논쟁하십시오.이것은 토론이 아닙니다. 통찰력을 얻기 위한 협업입니다.\n\n4. 컨셉팅을 위한 요구사항\n기법: 요구사항 기반 + 메타 프롬프팅\n이것은 자체적으로 전체 기사를 받을 자격이 있지만, 여기에서 기반을 다져 보겠습니다.\nv0, Bolt, Lovable, UX Pilot 등과 같은 도구를 사용하여 빠른 프로토타입 또는 UI 화면을 구축할 때 프롬프트는 함께 작업한 대부분의 PRD보다 나아야 합니다. 왜냐하면 결과는 목표를 얼마나 명확하고 구체적으로 설명하는지에 전적으로 달려 있기 때문입니다.\n함정은? 그런 종류의 프롬프트를 작성하는 것은 어렵습니다. 따라서 디자인 프롬프트로 바로 이동하는 대신 먼저 메타 프롬프트를 작성해 보세요. 즉, GPT가 더 나은 프롬프트를 작성하도록 돕는 프롬프트입니다. 프롬프트에 대한 프롬프트, 프롬프트-셉션이라고도 할 수 있습니다.\n그렇게 하려면 앱이나 화면에 대해 이미 알고 있는 것을 GPT에 제공하십시오. 그런 다음 정보 아키텍처, 레이아웃 및 사용자 흐름과 같은 것을 가지고 놀 수 있는 변수로 취급하도록 요청하십시오. 그러면 하나의 엄격한 아이디어가 아니라 탐색할 수 있는 여러 컨셉 방향이 나옵니다.\n역할 나는 AI와 함께 초기 단계 디자인 컨셉을 탐색하는 제품 디자인 전략가입니다.\n목표 모바일 웰니스 추적 앱의 일일 웰니스 요약 단일 화면을 디자인하기 위한 3가지 고유한 프롬프트 변형을 생성하십시오.각 변형은 다른 정보 아키텍처 및 레이아웃 전략을 실험해야 합니다. IA 또는 레이아웃을 완전히 지정할 필요는 없습니다. 각 프롬프트에서 다른 각도를 취하면 됩니다. 예를 들어, 하나는 사용자 상태를 우선시하고, 다른 하나는 습관 또는 권장 사항을 우선시할 수 있으며, 하나는 카드 레이아웃을 사용하고 다른 하나는 스크롤 피드를 사용합니다.\n사용자 맥락 대상 사용자는 바쁜 전문가이며 하루에 한두 번(아침/저녁) 화면을 확인하여 기분, 에너지 및 수면 품질을 기록하고 앱에서 작은 알림이나 요약을 받습니다.\n시각적 스타일 차분하고 접근하기 쉬운 분위기를 유지하십시오.\n형식 3가지 프롬프트 변형 각각은 명확하고 독립적으로 구조화되어야 합니다.\n기억하십시오: 세 가지 프롬프트 간의 주요 차이점은 기본 IA 및 레이아웃 논리여야 합니다. 과도하게 설명할 필요는 없습니다. 단지 디자인 생성기가 동일한 사용자 요구 사항에 대한 다른 해석으로 안내하십시오.\n\n5. 인지 검토에서 테스트 가설로\n기법: 캐주얼 생각의 트리 + 캐주얼 추론 + 다중 역할 + 자기 성찰\n인지 검토는 사용자 작업을 분해하고 단계가 직관적인지 확인하는 강력한 방법입니다.\n예: \"사용자가 작업을 추가하려고 합니다\" → 어디를 클릭해야 하는지 압니까? 다음에 무엇을 해야 합니까? 성공했는지 압니까?\n이 기법은 자신의 디자인을 검토하는 데 매우 유용하다는 것을 알게 되었습니다. 때로는 이미 목업이 있거나, 때로는 PM과 무엇을 어디에 넣어야 할지 여전히 논쟁 중입니다. 어느 쪽이든 GPT가 도움이 될 수 있습니다.\n다음은 해당 프로세스를 실행하는 고급 방법입니다.\n맥락 프로젝트 관리 앱에서 새 작업을 만들 수 있는 화면의 스크린샷을 받았습니다. 사용자가 수행하려는 주요 작업은 \"작업 추가\"입니다. 경험이 전혀 없는 초보자와 유사한 도구에 익숙한 재방문 사용자라는 두 가지 사용자 유형의 행동을 시뮬레이션합니다.\n작업 및 지침 UI를 단계별로 진행하고 평가하십시오.각 단계에서 무엇을 해야 할지 알게 될까요?작업을 수행하는 방법을 이해할까요?성공했는지 알까요?각 단계에 대해 대체 사용자 경로를 고려하십시오(UI에 대한 여러 해석이 있는 경우). 캐주얼 생각의 트리 방법을 사용하십시오.각 단계에서 성찰하십시오. 사용자는 여기서 어떤 가정을 하고 있습니까? 불확실성을 줄이는 데 어떤 시각적 피드백이 도움이 될까요?\n형식 각 단계를 번호 목록으로 사용하십시오. 각 단계에 대해 관찰, 가능한 혼란 및 UX 제안을 추가하십시오.\n제한 사항 시각적으로 암시되지 않는 한 사전 지식을 가정하지 마십시오.단일 사용자 유형으로 분석을 제한하지 마십시오.\n인지 검토는 훌륭하지만 테스트 가능한 가설로 이어질 때 더욱 유용해집니다.\n검토를 실행한 후에는 일반적으로 사용자를 혼란스럽게 할 수 있는 순간을 발견하게 됩니다. 이를 추측으로 남겨두는 대신 구체적인 UX 테스트 가설로 전환하십시오.\nGPT에 잠재적인 마찰 지점을 표시할 뿐만 아니라 실제 사용자와 이를 검증하는 방법을 정의하도록 요청합니다.\n작업 및 지침 이전 인지 검토를 기반으로 다음을 수행하십시오.검토에서 모든 잠재적인 사용성 가설을 추출하십시오.각 가설에 대해:조정 또는 비조정 사용성 테스트를 통해 테스트할 수 있는지 평가하십시오.어떤 특정 UX 결정 또는 디자인 요소가 이 문제를 유발할 수 있는지 설명하십시오. 인과적 추론을 사용하십시오.테스트 가능한 가설에 대해:구체적인 사용성 작업 또는 질문을 제안하십시오.명확한 검증 기준을 정의하십시오(가설이 확인되거나 반박되는지 어떻게 알 수 있는지).테스트의 타당성 및 신호 강도(예: 테스트 용이성 및 가설을 얼마나 자신 있게 검증할 수 있는지)를 평가합니다.영향, 확신 및 용이성(ICE)을 기반으로 우선순위 점수를 할당합니다.\n제한 사항 검토 결과에 근거하지 않은 가설을 만들지 마십시오.사용자 행동 또는 응답이 의미 있는 검증을 제공할 수 있는 테스트만 제안하십시오. 순전히 기술적이거나 백엔드적인 문제는 건너뛰십시오.\n\n6. 교차 기능 피드백\n기법: 다중 역할\n훌륭한 디자인은 공동으로 제작됩니다. 훌륭한 디자이너는 PM, 엔지니어, 분석가, QA 등 교차 기능 팀과 협업하는 데 익숙합니다. 작업의 일부는 분산된 피드백을 명확한 실행 항목으로 전환하는 것입니다.\n이전에 AI에 \"역할\"을 부여하면 응답이 어떻게 날카로워지는지 이야기했습니다. 이제 이를 한 단계 끌어올려 보겠습니다. 여러 역할을 동시에 부여하면 어떻게 될까요? 이를 다중 역할 프롬프팅이라고 합니다. 다양한 관점에서 입력받는 디자인 검토를 시뮬레이션하는 좋은 방법입니다. 빠른 통찰력과 디자인에 대한 보다 균형 잡힌 비판을 얻을 수 있습니다.\n역할 귀하는 새로운 대시보드 디자인을 평가하는 전문가들로 구성된 교차 기능 팀입니다.\nPM(초점: 사용자 가치 및 우선순위)\n엔지니어(초점: 타당성 및 가장자리 사례)\nQA 테스터(초점: 명확성 및 테스트 용이성)\n데이터 분석가(초점: 메트릭 및 보고 명확성)\n디자이너(초점: 일관성 및 사용성)\n맥락 팀은 내부 사용을 위한 새 분석 대시보드 목업을 검토하고 있습니다.\n작업 및 지침 각 역할에 대해 다음을 수행하십시오.즉시 눈에 띄는 것은 무엇입니까?이 역할이 가질 수 있는 우려는 무엇입니까?어떤 피드백이나 제안을 하겠습니까?\n\nAI로 디자인하는 것은 기술이지 바로 가기가 아닙니다.\n지금까지 프롬프팅은 단순히 지침을 더 잘 입력하는 것이 아니라 더 나은 사고를 디자인하는 것임을 보았습니다.\n몇 가지 기법을 탐색했으며 각각은 다양한 맥락에서 유용합니다.\n\n기법: 언제 사용하는가\n역할 + 맥락 + 지침 + 제약 조건: 일관되고 집중된 응답을 원할 때 (특히 연구, 분해 및 분석).\n검사점 / 자체 검증: 정확성, 구조 또는 계층적 추론이 중요할 때. 복잡한 계획 또는 JTBD 분해에 적합합니다.\n이해 전 추론(RBU): 입력 자료가 크거나 모호할 때 (문서 또는 스크린샷과 같은). 오해를 줄이는 데 도움이 됩니다.\n생각의 트리(ToT): 모델이 옵션을 탐색하고, 되돌아가고, 비교하기를 원할 때. 감사, 평가 또는 발산적 사고에 이상적입니다.\n메타 프롬프팅: 올바른 질문을 하는 방법조차 확신할 수 없을 때. 모호하거나 창의적인 컨셉팅 초기에 사용하십시오.\n다중 역할 프롬프팅: 균형 잡힌 교차 기능 비판이 필요하거나 팀 피드백을 시뮬레이션해야 할 때.\n메모 업데이트된 “반대자” 프롬프팅: 자신의 논리에 도전하거나, 사각 지대를 노출하거나, 에코 체임버를 넘어 설 때.\n\n하지만 최고의 기법도 맹목적으로 사용하면 소용이 없으므로 스스로에게 물어보십시오.\n지금 정밀함이 필요한가, 아니면 관점이 필요한가?\n정밀함? 명확성과 제어를 위해 역할 + 검사점을 사용해 보세요.\n관점? 대안을 탐색하기 위해 다중 역할 또는 생각의 트리를 사용하십시오.\n\n모델이 내 프레임을 반영해야 하는가, 아니면 깨뜨려야 하는가?\n프레임을 반영? 역할 + 맥락 + 지침을 사용하십시오.\n깨뜨리려면? 반대자 프롬프팅을 사용하여 가정을 반박해 보세요.\n\n모호성을 줄이려고 하는가, 아니면 복잡성을 드러내려고 하는가?\n모호성을 줄이려면? 메타 프롬프팅을 사용하여 질문을 명확히 하십시오.\n복잡성을 드러내려면? 생각의 트리 또는 RBU를 사용하여 숨겨진 계층을 노출하십시오.\n\n이 작업은 조정에 관한 것인가, 탐색에 관한 것인가?\n조정? 팀 합의를 시뮬레이션하기 위해 다중 역할 프롬프팅을 사용하십시오.\n탐색? 더 깊이 파고들기 위해 인지 검토를 사용하십시오.\n\n모든 시간을 길게 프롬프트할 필요는 없습니다. 작업에서 요구할 때 세부 정보를 사용하고 습관적으로 사용하지 마십시오. AI는 많은 일을 할 수 있지만, 그것은 당신의 사고방식의 형태를 반영합니다. 그리고 프롬프팅은 그것을 형성하는 방법입니다. 따라서 더 잘 프롬프트하지 마십시오. 더 잘 생각하십시오. 그리고 AI 주변이 아닌 AI와 함께 디자인하십시오.","createdAt":"2025-08-12T09:07:25.425Z","language":"ko"}