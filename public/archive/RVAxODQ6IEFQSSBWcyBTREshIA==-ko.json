{"title":"EP184: API Vs SDK! ","content":"<body>\n<h1>API vs SDK</h1>\n<ul>\n<li>API (Application Programming Interface)는 소프트웨어 애플리케이션과 서비스가 서로 통신할 수 있도록 하는 규칙과 프로토콜의 집합입니다.</li>\n<li>SDK (Software Development Kit)는 특정 플랫폼, 프레임워크 또는 하드웨어용 애플리케이션을 구축하는 데 도움이 되는 도구, 라이브러리, 샘플 코드 및 문서의 포괄적인 패키지입니다.</li>\n</ul>\n<h1>SQL Injection (SQLi)</h1>\n<ul>\n<li>SQL Injection은 공격자가 데이터베이스 쿼리를 조작하여 민감한 데이터에 액세스할 수 있도록 하는 웹 취약점입니다.</li>\n<li>기본 SQLi: <code>1=1</code>과 같은 조건을 주입하여 인증을 우회합니다.</li>\n<li>In-band SQLi: <code>UNION SELECT</code> 또는 오류 메시지를 사용하여 사용자 이름, 비밀번호 등을 추출합니다.</li>\n<li>Blind SQLi (Boolean-based): 페이지가 결과를 반환하는지 여부에 따라 데이터베이스 정보를 추론합니다.</li>\n<li>Blind SQLi (Time-based): <code>SLEEP(5)</code>와 같은 명령을 사용하여 서버 응답 지연을 측정하고 데이터를 점진적으로 추출합니다.</li>\n</ul>\n<h1>Types of AI Agents</h1>\n<ul>\n<li>Simple Reflex Agents: 조건-행동 규칙을 따릅니다. (예: 온도가 높으면 팬을 켭니다.)</li>\n<li>Model-based Reflex Agents: 환경에 대한 내부 이해를 유지합니다.</li>\n<li>Goal-based Agents: 목표 달성에 중점을 두고 결정을 내립니다.</li>\n<li>Utility-based Agents: 다양한 결과의 가중치를 고려하여 최상의 결과를 제공하는 행동을 선택합니다.</li>\n<li>Learning Agents: 피드백을 사용하여 지속적으로 개선하고 적응합니다.</li>\n</ul>\n<h1>24 Good Resources to Learn Software Architecture in 2025</h1>\n<ul>\n<li>Software Design Books: DDIA, System Design Volume 1 & 2, Clean Architecture, Domain-Driven Design, Software Architecture: the Hard Parts</li>\n<li>Tech Blogs and Newsletters: Netflix, Uber, Meta, Airbnb의 기술 블로그, ByteByteGo 뉴스레터</li>\n<li>YouTube Channels and Architectural Resources: MIT Distributed Systems, Goto Conferences, ByteByteGo, Azure Architecture Center, AWS Architecture Blog</li>\n<li>WhitePapers: Facebook Memcache Scaling, Cassandra, Amazon DynamoDB, Kafka, Google File System</li>\n<li>Software Career Books: Pragmatic Programmer, The Software Architect Elevator, The Software Engineer’s Guidebook, Philosophy of Software Design</li>\n</ul>\n<h1>Cross-Site Scripting (XSS) Attacks</h1>\n<ul>\n<li>Reflected XSS: 악성 링크를 클릭할 때 발생하며, 페이로드는 URL에 포함되어 응답에 다시 표시되어 실행됩니다.</li>\n<li>Stored XSS: 악성 코드가 데이터베이스에 저장되어 페이지 로드 시 자동으로 실행됩니다.</li>\n<li>DOM-based XSS: 페이로드가 서버에 도달하지 않고 브라우저에서 DOM을 직접 조작합니다.</li>\n</ul>\n</body>","createdAt":"2025-10-11T15:30:23.000+00:00","link":"https://blog.bytebytego.com/p/ep184-api-vs-sdk","language":"ko"}