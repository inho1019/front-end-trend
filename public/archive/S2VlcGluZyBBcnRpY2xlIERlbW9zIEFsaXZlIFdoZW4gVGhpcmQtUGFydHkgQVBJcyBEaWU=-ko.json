{"content":"```html\n<html>\n<head>\n<title>Article Demo Resilience</title>\n</head>\n<body>\n<p>본문은 4년 동안 정상 작동하던 'Headless Form Submission with the WordPress REST API' 글의 데모가 작동을 멈춘 상황에서 시작합니다. 이 글은 사용자 정의 프론트엔드 구축 시 REST API 엔드포인트를 사용하여 검증 오류 및 제출 피드백을 캡처하고 표시하는 방법을 보여주는 CodePen 임베드를 포함하고 있었습니다. 이러한 데모의 안정성을 높이기 위해 외부 서비스에 대한 의존성을 제거하는 방법, 특히 REST API 의존성을 분리하는 두 가지 주요 접근 방식에 대해 설명합니다.</p>\n<p><strong>1. 코드 내에서 HTTP 호출을 모킹(Mocking)하기</strong></p>\n<p>테스트 프레임워크에서 제공하는 기능을 사용하거나 Fetch API를 직접 패치하여 요청을 가로채고 미리 정의된 응답을 반환하는 방식입니다. 이는 별도의 외부 서비스에 대한 의존성을 없애는 가장 확실한 방법입니다.</p>\n<pre>\nconst fetchWPFormsRestApiInterceptor = (fetch) => async (resource, options = {}) => {\n  // ... (리소스 및 데이터 형식 확인)\n  if (resource.match(/wp-json\\/contact-form-7/)) {\n    return contactForm7Response(options.body);\n  }\n  // ... (다른 플러그인 처리)\n  return fetch(resource, options);\n};\nwindow.fetch = fetchWPFormsRestApiInterceptor(window.fetch);\n\nconst contactForm7Response = (formData) => {\n  // ... (성공 또는 실패 응답 생성)\n  return Response.json(body);\n};\n</pre>\n<p>이 방식은 별도의 인프라 없이 데모 자체에 포함될 수 있어, 작은 규모의 데모에 적합합니다.</p>\n<p><strong>2. 모킹 API 서버 사용하기</strong></p>\n<p>서버리스 함수와 같은 서비스를 활용하여 실제 서비스 대신 미리 정의된 응답을 제공하는 모킹 API 서버를 구축하는 방식입니다. DigitalOcean Functions와 같은 무료 티어가 있는 서비스를 활용하면 비용 효율적으로 구축할 수 있습니다.</p>\n<pre>\nfunction main(event) {\n  // ... (event에서 FormData 추출 및 처리)\n  const formData = convertMultipartFormDataToFormData(Buffer.from(event?.http?.body ?? \"\", \"base64\").toString(\"utf8\"));\n  // ... (응답 생성 로직)\n  const body = !submissionValidationFailed.invalid_fields.length ? submissionSuccess : submissionValidationFailed;\n  return { body };\n}\n\nasync function convertMultipartFormDataToFormData(data) {\n  // ... (multipart/form-data를 FormData로 변환)\n}\n</pre>\n<p>이 방식은 데모뿐만 아니라 다양한 테스트에도 활용될 수 있으며, 복잡한 요구사항이나 별도의 팀이 관리하는 경우 유용할 수 있습니다.</p>\n<p><strong>결론</strong></p>\n<p>두 접근 방식 모두 외부 API 의존성을 분리하여 데모의 안정성을 높일 수 있습니다. 직접 모킹하는 방식은 추가적인 외부 의존성이 없다는 장점이 있지만, 모킹 API 서버는 더 넓은 범위의 활용 가능성을 제공합니다. 궁극적으로는 데모의 중단을 감지하는 모니터링과 문제 발생 시 대처할 수 있는 적절한 도구를 갖추는 것이 중요합니다.</p>\n</body>\n</html>\n```","createdAt":"2025-08-12T16:08:53.076Z","language":"ko"}