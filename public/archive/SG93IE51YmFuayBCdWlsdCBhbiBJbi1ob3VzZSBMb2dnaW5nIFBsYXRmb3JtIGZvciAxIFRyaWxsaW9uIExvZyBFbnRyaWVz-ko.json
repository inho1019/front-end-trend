{"title":"How Nubank Built an In-house Logging Platform for 1 Trillion Log Entries","content":"<body>\n    <p>이 글은 Nubank가 자체 개발한 로깅 플랫폼 구축 경험을 공유합니다. Nubank는 급격한 성장으로 인해 기존 외부 로깅 솔루션의 높은 비용, 관리의 어려움, 낮은 가시성, 그리고 문제 발생 시 신뢰성 부족 등의 문제를 겪었습니다. 이에 따라 Nubank는 자체 로깅 플랫폼 구축을 결정했습니다.</p>\n\n    <h2>Nubank 자체 로깅 플랫폼 구축 배경</h2>\n    <ul>\n        <li>\n            <p><strong>비용 증가 및 예측 불가능성:</strong> 외부 업체의 솔루션은 사용량 증가에 따라 비용이 비례적으로 증가하며, 예측이 어려웠습니다.</p>\n        </li>\n        <li>\n            <p><strong>관리의 어려움 및 낮은 가시성:</strong> 로그 수집 및 저장 방식에 대한 통제력이 부족했고, 문제 발생 시 원인 파악이 어려웠습니다.</p>\n        </li>\n        <li>\n            <p><strong>시스템 연동의 제약:</strong> 경고 및 대시보드와 같은 중요한 도구들이 외부 플랫폼에 종속되어 있어 다른 서비스로의 전환이 어려웠습니다.</p>\n        </li>\n        <li>\n            <p><strong>성능 저하:</strong> 로그 수집량이 급증할 때 쿼리 속도가 느려져 사고 대응에 지연이 발생했습니다.</p>\n        </li>\n    </ul>\n\n    <h2>Nubank 로깅 플랫폼 구축 전략 (2단계 접근)</h2>\n    <p>Nubank는 모든 것을 한 번에 구축하는 대신, 2단계로 나누어 프로젝트를 진행했습니다.</p>\n    <ul>\n        <li>\n            <p><strong>1단계: Observability Stream (데이터 수집 및 처리)</strong></p>\n            <ul>\n                <li>수천 개의 애플리케이션에서 로그 데이터를 수집하고, 필터링, 변환, 메트릭 생성 등 처리를 담당합니다.</li>\n                <li>데이터 버퍼링을 통해 트래픽 스파이크를 완화하고 안정성을 높였습니다.</li>\n                <li>Fluent Bit (오픈 소스)를 로그 포워더로 사용했습니다.</li>\n            </ul>\n        </li>\n        <li>\n            <p><strong>2단계: Query and Storage Platform (데이터 저장 및 쿼리)</strong></p>\n            <ul>\n                <li>수집 및 처리된 로그 데이터를 효율적으로 저장하고 빠르게 검색할 수 있도록 합니다.</li>\n                <li><strong>쿼리 엔진:</strong> Trino를 사용하여 여러 백엔드에 분산된 데이터를 효율적으로 쿼리하고 파티셔닝을 통해 성능을 최적화했습니다.</li>\n                <li><strong>스토리지:</strong> AWS S3를 사용하여 높은 내구성, 가용성, 무한한 확장성을 확보했습니다.</li>\n                <li><strong>데이터 포맷:</strong> Parquet를 사용하여 데이터 압축률을 높이고 쿼리 성능을 향상시켰습니다.</li>\n                <li><strong>Parquet Generator (자체 개발):</strong> 수집된 로그를 Parquet 형식으로 변환하는 고성능 자체 서비스를 개발했습니다.</li>\n            </ul>\n        </li>\n    </ul>\n\n    <h2>핵심 목표</h2>\n    <ul>\n        <li><strong>안정성:</strong> 예상치 못한 장애나 사용량 급증 시에도 안정적으로 작동해야 합니다.</li>\n        <li><strong>확장성:</strong> 단기적인 트래픽 증가와 장기적인 성장을 모두 수용할 수 있어야 합니다.</li>\n        <li><strong>비용 효율성:</strong> 상용 솔루션 대비 현저히 저렴하면서도 완전한 통제와 가시성을 제공해야 합니다.</li>\n    </ul>\n\n    <h2>Nubank 로깅 플랫폼의 현재 규모 및 성과</h2>\n    <ul>\n        <li><strong>일일 1조 건의 로그 수집</strong></li>\n        <li><strong>일일 약 1 페타바이트의 데이터 처리</strong></li>\n        <li><strong>45일 보존 기간 (약 45 페타바이트의 검색 가능 데이터 보유)</strong></li>\n        <li><strong>일일 약 15,000건의 쿼리 실행 (일일 150 페타바이트 스캔)</strong></li>\n        <li><strong>이전 외부 솔루션 대비 50% 비용 절감</strong></li>\n    </ul>\n\n    <h2>결론</h2>\n    <p>Nubank의 자체 로깅 플랫폼 구축은 회사의 성장에 맞춰 인프라를 재설계하는 모범 사례를 보여줍니다. 데이터 수집과 쿼리를 분리하고, 마이크로 배치 처리, Parquet 포맷과 AWS S3 조합, Trino 쿼리 엔진 활용, 그리고 자체 개발 서비스 통합을 통해 예측 가능한 비용, 높은 확장성, 그리고 깊이 있는 운영 가시성을 확보했습니다. 이를 통해 엔지니어들은 문제를 더 빨리 해결하고, 자신감을 가지고 새로운 기능을 개발하며, 회사의 미래 성장을 위한 준비를 갖추게 되었습니다.</p>\n</body>","createdAt":"2025-10-27T15:30:29.000+00:00","link":"https://blog.bytebytego.com/p/how-nubank-built-an-in-house-logging","language":"ko"}