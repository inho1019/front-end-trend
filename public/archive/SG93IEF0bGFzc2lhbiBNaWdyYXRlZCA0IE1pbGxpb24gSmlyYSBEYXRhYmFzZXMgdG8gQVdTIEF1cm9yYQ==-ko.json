{"content":"<body>\n    <p>Atlassian은 AWS RDS PostgreSQL에서 AWS Aurora PostgreSQL로 400만 개의 Jira 데이터베이스를 마이그레이션하는 복잡한 프로젝트를 성공적으로 완료했습니다. 이 마이그레이션은 다운타임을 3분 미만으로 유지하면서 비용 효율성, 안정성(99.95%에서 99.99%로 향상), 피크 시간대 자동 확장 성능 향상을 목표로 했습니다.</p>\n    <p>Atlassian의 마이그레이션 전략은 다음과 같습니다:</p>\n    <ul>\n        <li>\n            <p><strong>읽기 전용 복제본 생성:</strong> 원본 RDS 데이터베이스의 라이브 복사본인 Aurora 읽기 전용 복제본을 생성하여 백그라운드에서 데이터를 동기화합니다.</p>\n        </li>\n        <li>\n            <p><strong>조정된 전환:</strong> 모든 사용자에게 쓰기를 잠그고, 읽기 전용 복제본을 Aurora 클러스터로 승격시키고, 애플리케이션 연결을 새 Aurora 엔드포인트로 업데이트한 후 사용자에게 다시 액세스 권한을 부여합니다.</p>\n        </li>\n        <li>\n            <p><strong>AWS Step Functions로 오케스트레이션:</strong> 전환 프로세스를 관리하고 안전 검사를 수행하며 필요한 경우 이전 상태로 자동 롤백합니다.</p>\n        </li>\n        <li>\n            <p><strong>기능 플래그 사용:</strong> 애플리케이션 서버 전반에 걸쳐 데이터베이스 연결을 즉시 전환하여 전환 시간을 최소화합니다.</p>\n        </li>\n    </ul>\n    <p>이 전략 덕분에 실제 전환 시간은 3분 미만으로 유지될 수 있었습니다.</p>\n    <p><strong>Aurora의 장점:</strong></p>\n    <ul>\n        <li>\n            <p><strong>듀얼 인스턴스:</strong> Aurora는 작성자 인스턴스와 읽기 전용 인스턴스를 동시에 사용할 수 있어, 더 작은 인스턴스 크기로도 동등하거나 더 나은 성능을 제공합니다.</p>\n        </li>\n        <li>\n            <p><strong>자동 확장:</strong> 피크 시간대에 추가 읽기 전용 인스턴스를 동적으로 생성하여 성능을 향상시키고, 오프 피크 시간대에는 축소하여 비용을 절감합니다.</p>\n        </li>\n        <li>\n            <p><strong>안정성 향상:</strong> SLA가 99.95%에서 99.99%로 향상되어 연간 허용 다운타임이 4.4시간에서 52분으로 줄었습니다.</p>\n        </li>\n        <li>\n            <p><strong>비용 효율성:</strong> 더 작은 인스턴스 크기, 자동 확장, 듀얼 인스턴스 활용을 통해 비용 효율성을 크게 개선했습니다.</p>\n        </li>\n    </ul>\n    <p><strong>파일 개수 제한 문제 및 해결책:</strong></p>\n    <p>Atlassian은 Jira 데이터베이스의 복잡한 스키마로 인해 발생하는 수백만 개의 파일로 인해 Aurora 인스턴스 시작에 문제가 발생했습니다. Aurora는 파일 열거 과정에 타임아웃이 있었기 때문입니다.</p>\n    <p>이 문제를 해결하기 위해 Atlassian은 \"드레이닝(draining)\"이라는 새로운 워크플로를 개발했습니다. 이는 Aurora에서 처리할 수 있는 안전한 파일 개수 임계값에 도달할 때까지 RDS 인스턴스에서 테넌트 데이터베이스를 이동시키는 프로세스입니다.</p>\n    <ul>\n        <li>\n            <p><strong>드레이닝:</strong> 가장 작고 사용량이 적은 테넌트부터 우선적으로 이동하여 마이그레이션 속도를 높이고 영향력을 줄입니다.</p>\n        </li>\n        <li>\n            <p><strong>변환:</strong> 파일 개수가 줄어든 RDS 인스턴스를 Aurora로 표준 마이그레이션 프로세스를 통해 변환합니다.</p>\n        </li>\n        <li>\n            <p><strong>재채우기:</strong> 변환된 Aurora 클러스터를 다른 RDS 인스턴스의 테넌트 데이터베이스를 위한 대상지로 사용하여 효율성을 극대화합니다.</p>\n        </li>\n    </ul>\n    <p>이 \"데이지 체인(daisy chain)\" 방식은 최소한의 인프라 오버헤드로 274억 개 이상의 파일을 성공적으로 처리했습니다. 최종적으로 2,403개의 RDS 인스턴스가 Aurora로 변환되었고 260만 개의 데이터베이스가 마이그레이션되었습니다.</p>\n    <p>이 프로젝트는 Atlassian의 목표를 달성했을 뿐만 아니라 AWS Aurora의 운영적 한계에 대한 이해를 높여 플랫폼 개선에 기여했습니다.</p>\n</body>","createdAt":"2025-08-13T04:34:37.311Z","language":"ko"}