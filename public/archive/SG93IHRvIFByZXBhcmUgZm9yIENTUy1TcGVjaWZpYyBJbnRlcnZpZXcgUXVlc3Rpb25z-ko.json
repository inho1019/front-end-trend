{"content":"<body>\n\n<h1>프론트엔드 CSS 면접 질문 요약</h1>\n\n<p>이 문서는 프론트엔드 개발자 면접에서 자주 나오는 CSS 관련 질문 10가지와 답변 가이드라인을 제공합니다. 단순히 정답을 암기하는 것보다 문제 해결 방식과 사고 과정을 보여주는 것이 중요합니다.</p>\n\n<h2>면접 질문 목록</h2>\n\n<ul>\n<li>반응형 웹사이트 구축 방법 (쉬움)</li>\n<li>CSS 전처리기(Sass, Less 등) 설명 및 유용성 (쉬움)</li>\n<li>CSS에서 폰트를 반응형으로 만드는 방법 (쉬움)</li>\n<li>z-index 속성과 스태킹 컨텍스트 생성 방식 설명 (중간)</li>\n<li>display 속성의 block, inline, inline-block 값 차이점 (중간)</li>\n<li>box-sizing: border-box; 의 역할 (중간)</li>\n<li>CSS에서 이미지를 반응형으로 만드는 방법 (중간)</li>\n<li>CSS 성능을 향상시키는 방법 (어려움)</li>\n<li>CSS-in-JS와 외부 CSS 임포트의 장단점 및 선택 기준 (어려움)</li>\n<li>레이아웃을 CSS로 구축하는 능력 (어려움)</li>\n</ul>\n\n<h2>주요 답변 내용</h2>\n\n<ul>\n<li><strong>반응형 웹사이트:</strong> 상대 단위 (%, em, rem), 미디어 쿼리, 플루이드 레이아웃 사용. \"모바일 우선\" 접근 방식 강조.</li>\n<li><strong>CSS 전처리기:</strong> Sass, Less 등은 변수, 중첩, 믹스인, 함수 등을 제공하여 코드 재사용성 및 유지보수성 향상.</li>\n<li><strong>반응형 폰트:</strong> rem, em과 같은 상대 단위, clamp() 함수, 뷰포트 단위 (vw, vh), 미디어 쿼리 활용. 접근성 고려.</li>\n<li><strong>z-index 및 스태킹 컨텍스트:</strong> position 속성이 있는 요소에만 적용되며, 특정 CSS 속성 (opacity < 1, transform, filter 등)에 의해 새로운 스태킹 컨텍스트 생성.</li>\n<li><strong>display 속성:</strong>\n<ul>\n<li>block: 새 줄 시작, 부모 너비 전체 차지.</li>\n<li>inline: 텍스트 흐름 내에서 콘텐츠 너비만큼 차지, 너비/높이 설정 불가.</li>\n<li>inline-block: 텍스트 흐름 내에서 블록처럼 너비/높이 설정 가능.</li>\n</ul>\n</li>\n<li><strong>box-sizing: border-box:</strong> 너비와 높이가 패딩과 테두리를 포함하도록 계산 방식을 변경하여 예측 가능성 높임.</li>\n<li><strong>반응형 이미지:</strong> max-width: 100%; height: auto; 사용. 특정 비율 유지를 위해 padding-bottom 트릭 또는 aspect-ratio 속성 사용.</li>\n<li><strong>CSS 성능:</strong> 번들 크기 최소화 (PurgeCSS 등), CSS 분할 및 지연 로딩, 단순하고 얕은 선택자 사용, CSS 최소화 및 압축, critical CSS 활용, 비용이 많이 드는 속성 (box-shadow, filter 등) 사용 최소화, !important 및 과도한 특정 선택자 지양, 사용하지 않는 CSS 최적화, CSS 감사.</li>\n<li><strong>CSS-in-JS vs 외부 CSS:</strong>\n<ul>\n<li>CSS-in-JS: 컴포넌트 스코핑, 동적 스타일링 용이. 런타임 오버헤드, JS 번들 크기 증가 가능성.</li>\n<li>외부 CSS: 빠른 렌더링, 캐싱 용이. 전역 스코핑으로 인한 충돌 가능성, 동적 스타일링 어려움.</li>\n<li>대부분의 팀은 두 가지 방식을 혼합하여 사용.</li>\n</ul>\n</li>\n<li><strong>레이아웃 구축:</strong> CSS Grid 또는 Flexbox를 사용하여 \"Holy Grail\" 레이아웃 등 다양한 레이아웃 구축 능력 시연.</li>\n</ul>\n\n<p>위 내용을 숙지하고 면접 상황에서 자신감 있게 설명하고 코드로 구현할 수 있다면 좋은 결과를 얻을 수 있을 것입니다.</p>\n\n</body>","createdAt":"2025-08-12T17:36:26.953Z","language":"ko"}