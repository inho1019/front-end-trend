{"title":"Modern CSS Round-Out Tabs","content":"<body>\n    <p>이 글은 CSS의 새로운 <code>shape()</code> 함수를 사용하여 웹 UI의 탭 모양을 만드는 방법을 설명합니다. 이전에는 여러 개의 추가 요소를 사용하여 복잡하게 구현했던 탭 모양을 이제 <code>shape()</code> 함수와 <code>clip-path</code> 속성을 사용하여 훨씬 간결하게 만들 수 있습니다.</p>\n\n    <h2>기존 방식의 문제점</h2>\n    <ul>\n        <li>\n            <div>이전 방식은 탭 모양을 만들기 위해 각 탭마다 4개의 추가 요소를 사용했습니다.</div>\n        </li>\n        <li>\n            <div>이러한 방식은 코드가 복잡하고 유지보수가 어렵다는 단점이 있었습니다.</div>\n        </li>\n    </ul>\n\n    <h2><code>shape()</code> 함수를 활용한 새로운 방식</h2>\n    <p><code>shape()</code> 함수는 펜 도구로 그림을 그리듯 다양한 모양을 만들 수 있는 강력한 CSS 기능입니다.</p>\n    <p>이 글에서는 <code>shape()</code> 함수를 사용하여 탭의 특징적인 둥근 모서리 부분을 간편하게 구현하는 방법을 단계별로 설명합니다.</p>\n\n    <h3><code>shape()</code> 함수를 사용한 탭 모양 구현 과정</h3>\n    <ol>\n        <li>\n            <div>시작점 설정: <code>from bottom left</code> 명령어로 탭의 왼쪽 하단 모서리부터 모양을 만들기 시작합니다.</div>\n        </li>\n        <li>\n            <div>첫 번째 곡선: <code>curve to</code> 명령어를 사용하여 탭의 둥근 모서리 부분을 생성합니다.</div>\n        </li>\n        <li>\n            <div>수직선 그리기: <code>vline to</code> 명령어를 사용하여 수직선을 그립니다.</div>\n        </li>\n        <li>\n            <div>상단 곡선: 다시 <code>curve to</code> 명령어를 사용하여 상단 모서리의 곡선을 만듭니다.</div>\n        </li>\n        <li>\n            <div>오른쪽 가장자리까지 수평 이동: <code>hline to</code> 명령어를 사용하여 오른쪽 가장자리까지 수평으로 이동합니다. 이 단계에서는 요소의 너비에 따라 유연하게 위치가 조절되는 장점이 있습니다.</div>\n        </li>\n        <li>\n            <div>나머지 모양 완성: 다시 곡선과 수직선을 사용하여 탭의 나머지 부분을 완성합니다.</div>\n        </li>\n    </ol>\n\n    <h2>가변성 및 장점</h2>\n    <ul>\n        <li>\n            <div><code>shape()</code> 함수는 고정된 좌표뿐만 아니라 백분율이나 계산식 등을 사용하여 유연하게 모양을 정의할 수 있습니다.</div>\n        </li>\n        <li>\n            <div>CSS 변수 (Custom Properties)를 활용하여 탭의 두께(`--tabGirth`)와 같은 값을 쉽게 조절할 수 있습니다.</div>\n        </li>\n        <li>\n            <div>추가 요소 없이 <code>clip-path</code>만으로 모양을 정의하므로 코드가 간결해지고 성능이 향상됩니다.</div>\n        </li>\n    </ul>\n\n    <h2>추가 기능 및 고려사항</h2>\n    <ul>\n        <li>\n            <div><code>overflow-inline</code> 및 <code>overflow-block</code> 속성을 사용하여 단방향 스크롤바를 제어할 수 있습니다.</div>\n        </li>\n        <li>\n            <div><code>shape()</code> 함수를 지원하지 않는 브라우저를 위한 폴백(fallback)으로 <code>border-radius</code>를 사용하는 방법을 제시합니다.</div>\n        </li>\n        <li>\n            <div>탭의 접근성에 대한 고려사항으로 앵커 링크와 ARIA 속성 사용을 언급하지만, 완벽한 구현을 위해서는 추가적인 고려가 필요함을 밝힙니다.</div>\n        </li>\n    </ul>\n    <p>글에서는 <code>shape()</code> 함수를 활용한 현대적인 탭 디자인의 예시와 함께, 과거에 사용되었던 복잡한 방식과의 비교를 통해 <code>shape()</code> 함수의 이점을 강조합니다.</p>\n</body>\n```","createdAt":"2025-10-13T15:56:32.000+00:00","link":"https://frontendmasters.com/blog/modern-css-round-out-tabs/","language":"ko"}