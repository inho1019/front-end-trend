{"content":"<body>\n  <p>React Native 0.76 버전부터 새로운 아키텍처가 기본으로 제공됩니다. 이 업데이트는 2018년부터 진행된 React Native의 근본적인 재작업 결과물이며, Suspense, Transitions, 자동 배치, useLayoutEffect와 같은 최신 React 기능을 완벽하게 지원합니다.</p>\n  <p>새로운 아키텍처는 타입 안전성을 갖춘 새로운 네이티브 모듈 및 네이티브 컴포넌트 시스템을 포함하여, 브릿지 없이 네이티브 인터페이스에 직접 접근할 수 있도록 합니다. C++로 작성된 이 시스템은 플랫폼 간 코드 공유, 지연 로딩, 동기/비동기 통신을 지원하며, 성능과 개발자 경험을 크게 향상시킵니다.</p>\n  <p>주요 변경 사항은 다음과 같습니다.</p>\n  <ul>\n    <li>\n      새로운 네이티브 모듈 시스템: JSI를 통한 네이티브 코드와의 동기 통신, 타입 안전성, C++ 코드 공유, 지연 로딩.\n    </li>\n    <li>\n      새로운 렌더러: C++로 작성되어 플랫폼 간 공유되며, 여러 스레드에서 우선순위별 업데이트 렌더링, 스레드 간 레이아웃 동기적 읽기 지원.\n    </li>\n    <li>\n      이벤트 루프: JavaScript 스레드에서의 작업 처리를 명확하게 정의하고, 웹 표준과 일치하여 브라우저 기능 지원 기반 마련.\n    </li>\n    <li>\n      브릿지 제거: JSI를 통한 직접 통신으로 시작 시간 단축, 오류 보고 개선, 불안정 동작 감소.\n    </li>\n  </ul>\n  <p>대부분의 앱은 기존 코드 변경 없이 0.76으로 업그레이드할 수 있으며, 점진적인 마이그레이션을 통해 새로운 아키텍처의 이점을 활용할 수 있습니다. React 18의 동시성 기능(Suspense, Transitions, 자동 배치, useLayoutEffect)을 완전히 사용하려면 네이티브 모듈 및 컴포넌트 마이그레이션이 필요합니다.</p>\n  <p>업그레이드를 위해서는 React Native 0.76 릴리스 게시물의 안내와 React 18 업그레이드 가이드를 따르십시오. 호환되지 않는 라이브러리의 경우, 개발자에게 마이그레이션을 요청하거나 대체 라이브러리를 사용하거나, 임시로 새 아키텍처를 비활성화할 수 있습니다.</p>\n</body>\n","createdAt":"2025-08-12T16:22:15.221Z","language":"ko"}