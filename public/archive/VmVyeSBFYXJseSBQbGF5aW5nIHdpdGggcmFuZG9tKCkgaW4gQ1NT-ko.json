{"title":"Very Early Playing with random() in CSS","content":"<body>\n  <h1>CSS random() 함수 미리보기: WebKit/Safari</h1>\n  <p>WebKit/Safari에서 CSS의 <code>random()</code> 함수 미리보기 버전을 출시했습니다. 이 함수를 통해 CSS에서 직접 무작위 값을 생성할 수 있게 되었으며, 이는 웹 페이지에 변화와 신선함을 더하는 데 유용합니다.</p>\n  <h2>주요 특징</h2>\n  <ul>\n    <li>CSS에서 직접 무작위 숫자 생성 가능 (기존 Sass 등 전처리기와 달리 컴파일 시점이 아닌 동적으로 작동)</li>\n    <li>요소별 고유한 무작위 값 적용 가능</li>\n    <li><code>random(min, max)</code> 형식으로 범위 지정</li>\n    <li><code>random(ident, min, max)</code> 또는 <code>random(ident element-shared, min, max)</code> 를 사용하여 특정 요소 또는 모든 요소에 동일한 무작위 값 적용 가능</li>\n    <li><code>random(min, max, step)</code> 형식으로 특정 간격의 값만 생성하도록 설정 가능</li>\n  </ul>\n  <h2>기존 방식과의 비교</h2>\n  <p>Sass와 같은 전처리기에서는 컴파일 시점에만 무작위 값이 결정되어 페이지 새로고침 시에도 동일한 값이 유지되었습니다. 또한, 다수의 요소에 무작위 값을 적용하려면 많은 양의 CSS 코드가 필요했지만, <code>random()</code> 함수를 사용하면 훨씬 간결하고 효율적인 코드로 구현할 수 있습니다.</p>\n  <h2>데모</h2>\n  <p>작성자는 <code>random()</code> 함수를 활용한 다양한 데모를 제시하며, 특히 각 요소가 고유한 무작위 색상, 위치, 애니메이션 지연 시간을 갖는 예시가 흥미롭다고 언급합니다.</p>\n  <h2>결론</h2>\n  <p>CSS <code>random()</code> 함수는 웹 디자인에 동적인 요소를 추가하는 강력한 도구가 될 것으로 기대됩니다.</p>\n</body>","createdAt":"2025-08-25T21:59:02.000+00:00","link":"https://frontendmasters.com/blog/very-early-playing-with-random-in-css/","language":"ko"}