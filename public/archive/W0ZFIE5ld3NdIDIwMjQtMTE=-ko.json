{"content":"<body>\n    <h2>ViteConf 2024 Replay</h2>\n    <ul>\n        <li>Vite 창립자 Evan You, Vite의 성과와 JavaScript 도구 미래 발표</li>\n        <li>Vite 주간 1500만 다운로드, Vitest도 Jest 대체하며 인기</li>\n        <li>다양한 도구 결합 문제 해결 위해 VoidZero 설립, Oxc, Rolldown 개발</li>\n        <li>Oxc: 빠르고 메모리 효율적, Rolldown: 대규모 프로젝트 성능 개선</li>\n        <li>빠르고 일관된 개발 환경, 통합 툴체인 구축 비전 제시</li>\n        <li>인기 세션 5개 소개 (Evan You Keynote, Ben Holmes, Rich Harris, Boshen Chen, Ryan Carniato)</li>\n    </ul>\n    <h2>Announcing VoidZero - Next Generation Toolchain for JavaScript</h2>\n    <ul>\n        <li>Evan You, JavaScript 생태계 고성능 통합 툴체인 구축 위해 VoidZero 창업</li>\n        <li>Vite 내부 문제 해결 위한 새로운 번들러 Rolldown 설계 과정에서 VoidZero 설립</li>\n        <li>VoidZero의 성과 및 비전 소개</li>\n    </ul>\n    <h2>Next.js Conf24</h2>\n    <ul>\n        <li>Guillermo Rauch, 커뮤니티 공헌에 감사 표하며 Next.js 발전 방향 제시</li>\n        <li>Next.js 복잡성 개선, Turbopack 속도 향상, 데이터 캐싱/렌더링 최적화, 에러 메시지 개선 발표</li>\n        <li>인기 세션 3개 소개 (Opening Keynote, AMA: Next.js Team, React Server Components)</li>\n    </ul>\n    <h2>Bundling Past, Present, and Future</h2>\n    <ul>\n        <li>Adobe 내부 공유 영상: 번들러의 과거, 현재, 미래</li>\n        <li>초기 스크립트/스타일 시트부터 최신 웹 툴링 복잡성까지 발전 과정 설명</li>\n        <li>모듈 시스템(CJS/AMD) 등장부터 Browserify, Webpack, Parcel, esbuild, Parcel 2까지 발전 과정 및 향후 전망 제시</li>\n    </ul>\n    <h2>Web Crap Has Taken Control</h2>\n    <ul>\n        <li>현대 웹 개발의 기술 스택 과잉 비판</li>\n        <li>불필요한 복잡성, 성능 저하, 사용자 경험 악화 초래한다고 지적</li>\n    </ul>\n    <h2>I didn't know you could use sibling parameters as default values in functions</h2>\n    <ul>\n        <li>JavaScript ES2015 기본값 매개변수 지원 사실 언급</li>\n        <li>이전 형제 매개변수를 기본값으로 활용하는 방법 소개</li>\n        <li>클래스 생성자에서 유용하게 활용하는 시나리오 제시</li>\n    </ul>\n    <h2>Dev Encyclopedia</h2>\n    <ul>\n        <li>일반적인 기술 용어, 개념, 프로그래밍 언어 전문 용어 설명</li>\n        <li>관련 추가 자료 링크 제공, 오픈 소스 및 광고 없음</li>\n    </ul>\n    <h2>Web Browser Engineering</h2>\n    <ul>\n        <li>웹 브라우저 작동 원리 학습 및 이해 위한 책 소개</li>\n        <li>네트워킹, 렌더링, JavaScript까지 포함, 수천 줄의 Python으로 웹 브라우저 구축 방법 설명</li>\n    </ul>\n    <h2>Escaping the Chrome Sandbox Through DevTools</h2>\n    <ul>\n        <li>Chrome 웹 브라우저 취약점 CVE-2024-6778, CVE-2024-5836 발견 과정 상세 설명</li>\n        <li>공격자, 비밀번호 탈취 및 브라우저 손상을 넘어 운영 체제 전체 제어 가능했음</li>\n    </ul>\n    <h2>Smarter than 'Ctrl+F': Linking Directly to Web Page Content</h2>\n    <ul>\n        <li>Text fragments 사용 시 웹 문서 특정 텍스트 부분 직접 연결 가능</li>\n        <li>브라우저에서 색상 강조, 페이지 스크롤 지원, 효과적인 콘텐츠 공유 링크 생성 가능</li>\n        <li>특정 텍스트 부분 링크 생성 기능 Chromium 기반 브라우저에 내장</li>\n    </ul>\n    <h2>React Folder Structure in 5 Steps</h2>\n    <ul>\n        <li>React 프로젝트 구조 효율적으로 정리 및 구성 위한 5단계 접근법 소개</li>\n        <li>작은 프로젝트부터 시작하여 규모 확장 과정 설명</li>\n        <li>저자 경험 기반 가이드, 모든 상황에 적용 가능하진 않으나 참고 가치 높음</li>\n    </ul>\n    <h2>Announcing Deno 2</h2>\n    <ul>\n        <li>Deno, Node.js 보안, 타입스크립트 지원, 패키지 관리 등 개선 노력</li>\n        <li>Deno 2.0 업데이트로 Node.js 및 npm 호환성 강화, package.json 및 node_modules 공식 지원</li>\n        <li>더 많은 사용자 유치 기대, 다양한 새로운 기능 및 개선 사항 소개</li>\n    </ul>\n    <h2>Node vs Bun: no backend performance difference</h2>\n    <ul>\n        <li>Node.js와 Bun 백엔드 성능 벤치마크 테스트 결과 공유</li>\n        <li>Bun 공식 주장 대비 실제 성능 차이 테스트, 데이터베이스 사용 여부가 성능에 큰 영향 미침</li>\n    </ul>\n    <h2>Compile and Run C in JavaScript using Bun</h2>\n    <ul>\n        <li>Bun을 이용한 C 코드 JavaScript 직접 컴파일 및 실행 방법 소개</li>\n        <li>기존 N-API, WebAssembly 한계 지적하며 Bun의 성능 및 효율성 우위 설명</li>\n    </ul>\n    <h2>ESLint Adds Support for JSON and Markdown</h2>\n    <ul>\n        <li>ESLint, JSON 및 Markdown 파일 린팅 지원 추가</li>\n        <li>프로젝트 내 문서 및 설정 파일 일관성 관리 가능, 웹 개발 모든 형식 린팅 지원 목표</li>\n    </ul>\n    <h2>🕹 튜토리얼</h2>\n    <ul>\n        <li>Understanding the Difference Between File and Blob Objects</li>\n        <li>Blob과 File 객체 특징 및 사용 예제 통해 차이점 설명, 사용 시점 구분 가이드</li>\n        <li>Migrating from Create React App to Vite</li>\n        <li>Create React App (CRA) 업데이트 중단 및 유지보수/성능 문제로 Vite 전환 추천</li>\n        <li>CRA 프로젝트 Vite 전환 과정 및 해결 방법 공유</li>\n        <li>A Guide to animations that feels right</li>\n        <li>애니메이션이 인터랙션 디자인 중요 요소임을 강조, 마스터 어려운 분야임을 설명</li>\n        <li>단일/복수 요소 애니메이션, 레이아웃 변경 애니메이션, CSS/JS 기반 애니메이션 차이점 설명</li>\n        <li>Build frontend applications at scale</li>\n        <li>대규모 프론트엔드 애플리케이션 구축 위한 무료 동영상 강좌 소개</li>\n        <li>아키텍처 및 설계 관점 다루어 기본기 향상에 도움</li>\n    </ul>\n    <h2>📦 코드와 도구</h2>\n    <ul>\n        <li>Zustand 5.0</li>\n        <li>번들 사이즈 절반 이하로 감소, deprecated 기능 및 오래된 요소 제거, UMD/SystemJS, ES5 지원 중단</li>\n        <li>Oxc Transformer Alpha</li>\n        <li>Oxc 프로젝트 새로운 트랜스파일러 공개 (1월 소식 공유 내용)</li>\n        <li>ARIA DevTools</li>\n        <li>Chrome 확장 프로그램으로 누락된 ARIA 라벨, 잘못 사용된 ARIA 역할, 불완전한 키보드 지원 탐지 및 테스트</li>\n        <li>pkg-graph</li>\n        <li>입력한 NPM 패키지 의존성 시각화 도구</li>\n    </ul>\n</body>","createdAt":"2025-08-12T16:23:13.162Z","language":"ko"}