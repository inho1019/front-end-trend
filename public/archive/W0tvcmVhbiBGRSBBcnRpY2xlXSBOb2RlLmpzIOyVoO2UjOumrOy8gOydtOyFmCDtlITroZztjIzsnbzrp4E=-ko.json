{"content":"<body>\n  <h2>Node.js 애플리케이션 CPU 사용량 급증 해결을 위한 프로파일링 기법</h2>\n  <p>이 글은 Node.js 애플리케이션의 CPU 사용량 급증 원인을 파악하고 성능 병목 현상을 해결하기 위한 다양한 프로파일링 도구와 기법을 실습 위주로 소개합니다.</p>\n  <h3>주요 내용:</h3>\n  <ul>\n    <li>내장된 Node.js 프로파일러</li>\n    <li>Chrome DevTools를 이용한 프로파일링</li>\n    <li>Node Inspector API 활용</li>\n    <li>Linux의 `perf` 도구 사용법</li>\n  </ul>\n  <p>각 도구의 사용법, 장단점을 상세히 다루어 프로덕션 환경에서의 성능 문제 진단 및 해결에 도움을 줍니다.</p>\n  <h3>목차:</h3>\n  <ol>\n    <li>데모 프로젝트 다운로드</li>\n    <li>CPU 바운드 작업과 I/O 바운드 작업 구분</li>\n    <li>내장된 Node.js 프로파일러 활용</li>\n    <li>Chrome DevTools 프로파일링</li>\n    <li>Node Inspector 프로파일링</li>\n    <li>`perf` 프로파일링</li>\n    <li>연속 프로파일링 이해</li>\n  </ol>\n</body>","createdAt":"2025-08-18T05:18:30.315Z","language":"ko"}